{"version":3,"sources":["Infobox.js","Table.js","Map.js","App.js","reportWebVitals.js","index.js"],"names":["Infobox","props","Card","title","number","Table","sortedData","tableData","sort","a","b","cases","className","map","data","name","id","toString","Map","ChangeView","center","zoom","useMap","setView","MapContainer","centre","lat","long","scrollWheelZoom","TileLayer","attribution","url","country","Circle","countryInfo","color","fillColor","radius","Popup","App","useState","setInputCountry","setCentre","changeCountry","event","target","value","countryCode","fetch","then","res","json","setCountryInfo","console","log","countries","setCountries","setTableData","useEffect","response","iso2","getCountries","FormControl","Select","variant","onChange","MenuItem","todayCases","recovered","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2960adbc.chunk.js","sourcesContent":["import { Card } from '@material-ui/core'\r\nimport React from 'react'\r\n\r\nfunction Infobox(props) {\r\n\r\n    return (\r\n        <div>\r\n            <Card>\r\n                <h3>{props.title}</h3>\r\n                <p><i><b>{props.number}</b></i></p>\r\n            </Card>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Infobox\r\n","import React from 'react'\r\nimport './Table.css';\r\n\r\nfunction Table(props) {\r\n    let sortedData=props.tableData.sort((a,b)=>a.cases>b.cases?-1:1)\r\n    return (\r\n        <div className=\"table\">\r\n            \r\n                {\r\n                    sortedData.map((data)=>(\r\n                        <tr key={data.id.toString()}>\r\n                            \r\n                            <td>{data.name}</td>\r\n                            <td>{data.cases}</td>\r\n                        </tr>\r\n                    ))\r\n                }\r\n            \r\n            \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Table\r\n","import React from 'react'\r\nimport { MapContainer, TileLayer, Marker } from 'react-leaflet'\r\nimport \"leaflet/dist/leaflet.css\";\r\nimport { Circle, Popup ,useMap} from \"react-leaflet\";\r\n\r\nfunction Map(props) {\r\n\r\n\r\n    function ChangeView({ center, zoom }) {\r\n        const map = useMap();\r\n        map.setView(center, zoom);\r\n        return null;\r\n      }\r\n    return (\r\n        <div>\r\n         <MapContainer center={[props.centre.lat,props.centre.long]} zoom={3} scrollWheelZoom={false}>\r\n         <ChangeView center={[props.centre.lat,props.centre.long]} zoom={3} />\r\n        <TileLayer\r\n           attribution='&copy; <a href=\"http://osm.org/copyright\">OpenStreetMap</a> contributors'\r\n            url=\"https://{s}.tile.openstreetmap.org/{z}/{x}/{y}.png\"\r\n        />\r\n        {\r\n          props.tableData.map((country)=>(\r\n         <Circle\r\n          center={[country.countryInfo.lat,country.countryInfo.long]}\r\n          \r\n          color={'red'}\r\n          fillColor={'red'}\r\n          radius={country.cases/20}>\r\n        <Popup>{country.country},<br/>{country.cases}</Popup>\r\n          \r\n        </Circle>\r\n          ))\r\n        }\r\n        \r\n      </MapContainer>   \r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Map\r\n","import { Card, FormControl, InputLabel, MenuItem, Select } from '@material-ui/core';\nimport { useEffect, useState } from 'react';\nimport './App.css';\nimport './Infobox'\nimport Infobox from './Infobox';\nimport Table from './Table';\nimport Map from './Map';\n\n\n\n\nfunction App() {\n\n  const [country, setInputCountry] = useState(\"worldwide\");\n  const [centre,setCentre]=useState({\n    lat:11.505,\n    long:-0.09\n  });\n  const changeCountry = async (event)=>{\n    setInputCountry(event.target.value)\n\n    const countryCode=event.target.value\n\n    \n    \n      const url = countryCode === \"worldwide\"\n      ? \"https://disease.sh/v3/covid-19/all\"\n      : `https://disease.sh/v3/covid-19/countries/${countryCode}`;\n\n      await fetch(url)\n      .then((res)=>res.json())\n      .then((data)=>{\n        setCountryInfo(data)\n        const centre = countryCode===\"worldwide\"?{\n          lat:91.505,\n          long:-10.09 \n        }\n        :{\n          lat:data.countryInfo.lat,\n          long:data.countryInfo.long\n        };\n\n        console.log(centre)\n        setCentre(centre)\n      })\n    \n  }\n\n  const [countries,setCountries] = useState([]);\n  const [countryInfo,setCountryInfo]=useState({});\n  const [tableData,setTableData]=useState([])\n\n  useEffect(()=>{\n    const getCountries = async ()=>{\n    await fetch(\"https://disease.sh/v3/covid-19/countries\")\n    .then((response)=>response.json())\n    .then((data) => {\n      let id = 101\n      const countries = data.map((country)=>({\n        id:id++,\n        name:country.country,\n        value:country.countryInfo.iso2,\n        cases:country.cases\n        \n      }))\n     setCountries(countries) \n     setTableData(data);\n    });\n    \n    }\n    getCountries();\n\n\n    \n      \n      \n  },[])\n\n  useEffect(()=>{\n\n    const fetchData = ()=>{\n      fetch(\"https://disease.sh/v3/covid-19/all\")\n      .then((res)=>res.json())\n      .then((data)=>{\n        const countryInfo = data\n        console.log(\"hello\")\n        console.log(countryInfo);\n        setCountryInfo(countryInfo);\n        \n  \n      });\n  \n    }\n    fetchData();\n    \n  },[])\n\n\n  return (\n    <div className=\"App\">\n    <div className=\"App_left\">\n\n    <header className=\"App_Header\">\n      <div>\n      <h1>Covid-19 Tracker</h1>\n      </div>\n      <div>\n      <FormControl>\n        \n      <Select\n              variant=\"outlined\"\n              value={country}\n              onChange={changeCountry}\n            >\n          <MenuItem  key =\"worldwide\" value=\"worldwide\">Worldwide</MenuItem>\n          {countries.map((country) => (\n            <MenuItem key={country.id.toString()} value={country.value}>{country.name}</MenuItem>\n          ))}\n\n        </Select>\n      </FormControl>\n      </div>\n      \n      \n\n      </header> \n\n\n      <div className=\"Info\">\n      <Infobox number={countryInfo.cases} title=\"Cases\"/>\n      <Infobox number={countryInfo.todayCases} title=\"Today's Cases\"/>\n      <Infobox number={countryInfo.recovered} title=\"Recovered\"/>\n       \n      </div>\n      <div className=\"mapid\">\n       <Map centre={centre} tableData={tableData} />\n       </div>\n\n    \n  </div>\n    <div className=\"App_right\">\n      <h2>Worldwide Cases</h2>\n       <Card>\n        \n       <Table tableData={countries} />   \n       </Card>\n\n       \n\n    </div>\n</div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  \n    <App />,\n  \n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}